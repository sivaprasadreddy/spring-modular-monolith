plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0-M2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.sivalabs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springModulithVersion', "1.3.0-M3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	implementation 'org.springframework.modulith:spring-modulith-starter-jdbc'
	implementation 'org.springframework.modulith:spring-modulith-events-amqp'
	runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'

	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:rabbitmq'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events = ['PASSED', 'FAILED', 'SKIPPED']
		showStandardStreams = true
		exceptionFormat = 'FULL'
	}
}

spotless {
	java {
		target("src/*/java/**/*.java")
		importOrder()
		removeUnusedImports()
		palantirJavaFormat("2.50.0")
		formatAnnotations()
	}
}

springBoot {
	buildInfo()
}

tasks.named("bootBuildImage") {
	builder = "dashaun/builder:tiny"
	imageName = "sivaprasadreddy/${project.name}"
}

